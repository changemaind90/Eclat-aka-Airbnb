// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  PENDING
  CONFIRMED
  CANCELED
  COMPLETED
}

model User {
  id    Int     @default(autoincrement()) @id
  email String  @unique
  passwordHash String?
  refreshToken String?

  listings Listing[]
  bookings Booking[]
  reviews Review[]
}

model Listing {
  id    Int     @default(autoincrement()) @id
  title String
  description String
  address String
  pricePerNight Int
  numberOfGuests Int

  reviews Review[]
  bookings Booking[]

  owner User @relation(fields: [ownerId], references: [id])
  ownerId Int
}

model Booking {
  id    Int     @default(autoincrement()) @id
  startDate DateTime
  endDate DateTime
  totalPrice Int
  status Status

  reviews Review[]

  user User @relation(fields: [userId], references: [id])
  userId Int

  listing Listing @relation(fields: [listingId], references: [id])
  listingId Int
}

model Review {
  id    Int     @default(autoincrement()) @id
  rating Int
  comment String

  author User @relation(fields: [authorId], references: [id])
  authorId Int

  listing Listing @relation(fields: [listingId], references: [id])
  listingId Int

  booking Booking @relation(fields: [bookingId], references: [id])
  bookingId Int
}