// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  PENDING
  CONFIRMED
  CANCELED
  COMPLETED
}

model User {
  id           Int     @id @default(autoincrement())
  email        String  @unique
  passwordHash String?
  refreshToken String?
  balance      Int     @default(0)

  listings     Listing[]
  bookings     Booking[]
  reviews      Review[]
  sentTxns     Transaction[] @relation("SentTransactions")
  receivedTxns Transaction[] @relation("ReceivedTransactions")
}

model Listing {
  id             Int    @id @default(autoincrement())
  title          String
  description    String
  address        String
  pricePerNight  Int
  numberOfGuests Int

  transactions Transaction[]

  reviews  Review[]
  bookings Booking[]

  owner   User @relation(fields: [ownerId], references: [id])
  ownerId Int
}

model Booking {
  id         Int      @id @default(autoincrement())
  startDate  DateTime
  endDate    DateTime
  totalPrice Int
  status     Status

  reviews Review[]

  user   User @relation(fields: [userId], references: [id])
  userId Int

  listing   Listing @relation(fields: [listingId], references: [id])
  listingId Int
}

model Review {
  id      Int    @id @default(autoincrement())
  rating  Int
  comment String

  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  listing   Listing @relation(fields: [listingId], references: [id])
  listingId Int

  booking   Booking @relation(fields: [bookingId], references: [id])
  bookingId Int
}

model Transaction {
  id        Int    @id @default(autoincrement())
  amount    Int
  paymentId String

  from   User @relation("SentTransactions", fields: [fromId], references: [id])
  fromId Int

  to   User? @relation("ReceivedTransactions", fields: [toId], references: [id])
  toId Int?

  listing   Listing? @relation(fields: [listingId], references: [id])
  listingId Int?
}
